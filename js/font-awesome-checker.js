// Font Awesome Icon Checker
// Verifica se os √≠cones carregaram corretamente e aplica fallbacks

(function() {
    'use strict';
    
    // Aguardar DOM carregar
    document.addEventListener('DOMContentLoaded', function() {
        
        // Aguardar um pouco para as fontes carregarem
        setTimeout(function() {
            checkAndFixIcons();
        }, 1000);
        
        // Verificar novamente ap√≥s 3 segundos
        setTimeout(function() {
            checkAndFixIcons();
        }, 3000);
    });
    
    function checkAndFixIcons() {
        console.log('üîç Verificando √≠cones Font Awesome...');
        
        // Selecionar todos os √≠cones FA
        const icons = document.querySelectorAll('i[class*="fa-"]');
        let fixedCount = 0;
        
        icons.forEach(function(icon) {
            if (isIconBroken(icon)) {
                fixBrokenIcon(icon);
                fixedCount++;
            }
        });
        
        if (fixedCount > 0) {
            console.log(`‚ö†Ô∏è ${fixedCount} √≠cones foram corrigidos`);
        } else {
            console.log('‚úÖ Todos os √≠cones carregaram corretamente');
        }
    }
    
    function isIconBroken(icon) {
        // Verificar se o √≠cone est√° renderizando como quadrado
        const computedStyle = window.getComputedStyle(icon, ':before');
        const content = computedStyle.getPropertyValue('content');
        
        // Se n√£o tem content ou √© um quadrado vazio
        if (!content || content === 'none' || content === '""') {
            return true;
        }
        
        // Verificar se a fonte foi carregada
        const fontFamily = computedStyle.getPropertyValue('font-family');
        if (!fontFamily.includes('Font Awesome')) {
            return true;
        }
        
        return false;
    }
    
    function fixBrokenIcon(icon) {
        const className = icon.className;
        
        // Fallbacks para √≠cones mais comuns
        const iconFallbacks = {
            'fa-home': 'üè†',
            'fa-user': 'üë§', 
            'fa-users': 'üë•',
            'fa-cog': '‚öôÔ∏è',
            'fa-bars': '‚ò∞',
            'fa-times': '‚úï',
            'fa-arrow-left': '‚Üê',
            'fa-arrow-right': '‚Üí',
            'fa-plus': '+',
            'fa-edit': '‚úèÔ∏è',
            'fa-trash': 'üóëÔ∏è',
            'fa-save': 'üíæ',
            'fa-search': 'üîç',
            'fa-eye': 'üëÅÔ∏è',
            'fa-chart-bar': 'üìä',
            'fa-chart-line': 'üìà',
            'fa-film': 'üé¨',
            'fa-video': 'üé•',
            'fa-play': '‚ñ∂Ô∏è',
            'fa-pause': '‚è∏Ô∏è',
            'fa-heart': '‚ù§Ô∏è',
            'fa-star': '‚≠ê',
            'fa-bell': 'üîî',
            'fa-envelope': '‚úâÔ∏è',
            'fa-phone': 'üìû',
            'fa-info-circle': '‚ÑπÔ∏è',
            'fa-check': '‚úì',
            'fa-exclamation-triangle': '‚ö†Ô∏è',
            'fa-facebook': 'f',
            'fa-twitter': 't',
            'fa-instagram': 'i',
            'fa-youtube': 'y',
            'fa-tiktok': 'T',
            'fa-rocket': 'üöÄ',
            'fa-magic': '‚ú®',
            'fa-crown': 'üëë',
            'fa-shield-alt': 'üõ°Ô∏è',
            'fa-database': 'üóÑÔ∏è'
        };
        
        // Encontrar qual √≠cone √© baseado na classe
        let iconType = null;
        for (let iconClass in iconFallbacks) {
            if (className.includes(iconClass)) {
                iconType = iconClass;
                break;
            }
        }
        
        if (iconType && iconFallbacks[iconType]) {
            // Aplicar fallback emoji
            icon.style.fontFamily = 'system-ui, -apple-system, sans-serif';
            icon.style.fontWeight = 'normal';
            icon.textContent = iconFallbacks[iconType];
            icon.style.fontSize = '0.9em';
            
            console.log(`üîß √çcone ${iconType} substitu√≠do por ${iconFallbacks[iconType]}`);
        } else {
            // Fallback gen√©rico
            icon.style.fontFamily = 'system-ui, -apple-system, sans-serif';
            icon.textContent = '‚Ä¢';
            icon.style.opacity = '0.7';
        }
    }
    
    // Fun√ß√£o para for√ßar recarga dos √≠cones
    window.forceIconReload = function() {
        console.log('üîÑ For√ßando recarga dos √≠cones...');
        
        // Recarregar CSS do Font Awesome
        const faLinks = document.querySelectorAll('link[href*="font-awesome"]');
        faLinks.forEach(function(link) {
            const newLink = link.cloneNode();
            newLink.href = link.href + '?t=' + Date.now();
            link.parentNode.insertBefore(newLink, link.nextSibling);
            setTimeout(() => link.remove(), 1000);
        });
        
        // Verificar novamente ap√≥s recarga
        setTimeout(checkAndFixIcons, 2000);
    };
    
    // Adicionar bot√£o de debug (s√≥ em desenvolvimento)
    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        setTimeout(function() {
            const debugBtn = document.createElement('button');
            debugBtn.textContent = 'üîß Fix Icons';
            debugBtn.style.position = 'fixed';
            debugBtn.style.bottom = '10px';
            debugBtn.style.right = '10px';
            debugBtn.style.zIndex = '9999';
            debugBtn.style.padding = '5px 10px';
            debugBtn.style.backgroundColor = '#6366f1';
            debugBtn.style.color = 'white';
            debugBtn.style.border = 'none';
            debugBtn.style.borderRadius = '4px';
            debugBtn.style.fontSize = '12px';
            debugBtn.onclick = function() {
                checkAndFixIcons();
                window.forceIconReload();
            };
            document.body.appendChild(debugBtn);
        }, 2000);
    }
    
})();